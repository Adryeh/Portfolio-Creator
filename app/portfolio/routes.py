from app import db
from flask import render_template, url_for, redirect, Blueprint, flash, abort
from flask_login import current_user, login_required
from app.models import Portfolio
from app.portfolio.forms import PortfolioForm, PortfolioTitleUpdate, PortfolioContentUpdate, PortfolioAboutUpdate


port = Blueprint('port', __name__)


@port.route('/create_portfolio', methods=['POST', 'GET'])
@login_required
def create_portfolio():
    form = PortfolioForm()
    if form.validate_on_submit():
        port = Portfolio(title=form.title.data, author=form.author.data, content=form.content.data,
                         about=form.about.data, link=form.link.data, avg=form.avg.data,
                         school=form.school.data, background_color=form.background_color.data,
                         font_color=form.font_color.data, creator=current_user)
        db.session.add(port)
        db.session.commit()
        flash('Success', 'success')
        return redirect(url_for('port.portfolio'))
    return render_template('create_portfolio.html', form=form)


@port.route('/portfolio')
@login_required
def portfolio():

    port = Portfolio.query.filter_by(user_id=current_user.id).first()
    if port is None:
        flash('You don\'t have any portfolio. Create your first!', 'info')
        return redirect(url_for('port.create_portfolio'))
    return render_template('portfolio.html', port=port)


@port.route('/portfolio/title', methods=['POST', 'GET'])
@login_required
def port_title_update():
    port = Portfolio.query.filter_by(user_id=current_user.id).first()
    if port.creator != current_user:
        abort(403)
    form = PortfolioTitleUpdate()
    if form.validate_on_submit():
        port.title = form.title.data
        db.session.commit()
        flash('Your title has been updated', 'success')
        return redirect(url_for('port.portfolio'))
    return render_template('update_portfolio_title.html', form=form)



@port.route('/portfolio/content', methods=['POST', 'GET'])
@login_required
def port_content_update():
    port = Portfolio.query.filter_by(user_id=current_user.id).first()
    if port.creator != current_user:
        abort(403)
    form = PortfolioContentUpdate()
    if form.validate_on_submit():
        port.content = form.content.data
        db.session.commit()
        flash('Your content has been updated', 'success')
        return redirect(url_for('port.portfolio'))
    return render_template('update_portfolio_content.html', form=form)


@port.route('/portfolio/about', methods=['POST', 'GET'])
@login_required
def port_about_update():
    port = Portfolio.query.filter_by(user_id=current_user.id).first()
    if port.creator != current_user:
        abort(403)
    form = PortfolioAboutUpdate()
    if form.validate_on_submit():
        port.about = form.about.data
        db.session.commit()
        flash('Your about has been updated', 'success')
        return redirect(url_for('port.portfolio'))
    return render_template('update_portfolio_about.html', form=form)




























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































